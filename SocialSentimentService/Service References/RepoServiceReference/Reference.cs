//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocialSentimentService.RepoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PostObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SocialSentimentService.RepoServiceReference.AccountObject AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SocialSentimentService.RepoServiceReference.PostTypeObject PostTypeObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeAddedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialSentimentService.RepoServiceReference.AccountObject Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostId {
            get {
                return this.PostIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PostIdField, value) != true)) {
                    this.PostIdField = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialSentimentService.RepoServiceReference.PostTypeObject PostTypeObject {
            get {
                return this.PostTypeObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.PostTypeObjectField, value) != true)) {
                    this.PostTypeObjectField = value;
                    this.RaisePropertyChanged("PostTypeObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeAdded {
            get {
                return this.timeAddedField;
            }
            set {
                if ((this.timeAddedField.Equals(value) != true)) {
                    this.timeAddedField = value;
                    this.RaisePropertyChanged("timeAdded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class AccountObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AboutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SocialSentimentService.RepoServiceReference.AccountTypeObject AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PostsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string About {
            get {
                return this.AboutField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutField, value) != true)) {
                    this.AboutField = value;
                    this.RaisePropertyChanged("About");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialSentimentService.RepoServiceReference.AccountTypeObject AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Posts {
            get {
                return this.PostsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostsField, value) != true)) {
                    this.PostsField = value;
                    this.RaisePropertyChanged("Posts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostTypeObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PostTypeObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostTypeId {
            get {
                return this.PostTypeIdField;
            }
            set {
                if ((this.PostTypeIdField.Equals(value) != true)) {
                    this.PostTypeIdField = value;
                    this.RaisePropertyChanged("PostTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountTypeObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class AccountTypeObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SocialSentimentService.RepoServiceReference.PlatformObject PlatformField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountTypeId {
            get {
                return this.AccountTypeIdField;
            }
            set {
                if ((this.AccountTypeIdField.Equals(value) != true)) {
                    this.AccountTypeIdField = value;
                    this.RaisePropertyChanged("AccountTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialSentimentService.RepoServiceReference.PlatformObject Platform {
            get {
                return this.PlatformField;
            }
            set {
                if ((object.ReferenceEquals(this.PlatformField, value) != true)) {
                    this.PlatformField = value;
                    this.RaisePropertyChanged("Platform");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlatformObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PlatformObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlatFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlatformUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlatFormId {
            get {
                return this.PlatFormIdField;
            }
            set {
                if ((this.PlatFormIdField.Equals(value) != true)) {
                    this.PlatFormIdField = value;
                    this.RaisePropertyChanged("PlatFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlatformUrl {
            get {
                return this.PlatformUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PlatformUrlField, value) != true)) {
                    this.PlatformUrlField = value;
                    this.RaisePropertyChanged("PlatformUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SentimentObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SentimentObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SocialSentimentService.RepoServiceReference.PostObject PostObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SentimentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SocialSentimentService.RepoServiceReference.SentimentTypeObject SentimentTypeObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialSentimentService.RepoServiceReference.PostObject PostObject {
            get {
                return this.PostObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.PostObjectField, value) != true)) {
                    this.PostObjectField = value;
                    this.RaisePropertyChanged("PostObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SentimentId {
            get {
                return this.SentimentIdField;
            }
            set {
                if ((this.SentimentIdField.Equals(value) != true)) {
                    this.SentimentIdField = value;
                    this.RaisePropertyChanged("SentimentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialSentimentService.RepoServiceReference.SentimentTypeObject SentimentTypeObject {
            get {
                return this.SentimentTypeObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SentimentTypeObjectField, value) != true)) {
                    this.SentimentTypeObjectField = value;
                    this.RaisePropertyChanged("SentimentTypeObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SentimentTypeObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class SentimentTypeObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SentimentTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxScore {
            get {
                return this.MaxScoreField;
            }
            set {
                if ((this.MaxScoreField.Equals(value) != true)) {
                    this.MaxScoreField = value;
                    this.RaisePropertyChanged("MaxScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SentimentTypeId {
            get {
                return this.SentimentTypeIdField;
            }
            set {
                if ((this.SentimentTypeIdField.Equals(value) != true)) {
                    this.SentimentTypeIdField = value;
                    this.RaisePropertyChanged("SentimentTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pager", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.Headers")]
    [System.SerializableAttribute()]
    public partial class Pager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FbCommentObject", Namespace="http://schemas.datacontract.org/2004/07/RepositoryService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class FbCommentObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SocialSentimentService.RepoServiceReference.PostObject PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PosterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SentimentScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeAddedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentIdField, value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Likes {
            get {
                return this.LikesField;
            }
            set {
                if ((this.LikesField.Equals(value) != true)) {
                    this.LikesField = value;
                    this.RaisePropertyChanged("Likes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureUrl {
            get {
                return this.PictureUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureUrlField, value) != true)) {
                    this.PictureUrlField = value;
                    this.RaisePropertyChanged("PictureUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SocialSentimentService.RepoServiceReference.PostObject Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PosterId {
            get {
                return this.PosterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterIdField, value) != true)) {
                    this.PosterIdField = value;
                    this.RaisePropertyChanged("PosterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SentimentScore {
            get {
                return this.SentimentScoreField;
            }
            set {
                if ((this.SentimentScoreField.Equals(value) != true)) {
                    this.SentimentScoreField = value;
                    this.RaisePropertyChanged("SentimentScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeAdded {
            get {
                return this.timeAddedField;
            }
            set {
                if ((this.timeAddedField.Equals(value) != true)) {
                    this.timeAddedField = value;
                    this.RaisePropertyChanged("timeAdded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RepoServiceReference.IRepositoryService")]
    public interface IRepositoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllUsers", ReplyAction="http://tempuri.org/IRepositoryService/GetAllUsersResponse")]
        SocialSentimentService.RepoServiceReference.UserObject[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllUsers", ReplyAction="http://tempuri.org/IRepositoryService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.UserObject[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetAllPostsResponse")]
        SocialSentimentService.RepoServiceReference.PostObject[] GetAllPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetAllPostsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetAllPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllSentiments", ReplyAction="http://tempuri.org/IRepositoryService/GetAllSentimentsResponse")]
        SocialSentimentService.RepoServiceReference.SentimentObject[] GetAllSentiments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllSentiments", ReplyAction="http://tempuri.org/IRepositoryService/GetAllSentimentsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentObject[]> GetAllSentimentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllPlatforms", ReplyAction="http://tempuri.org/IRepositoryService/GetAllPlatformsResponse")]
        SocialSentimentService.RepoServiceReference.PlatformObject[] GetAllPlatforms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllPlatforms", ReplyAction="http://tempuri.org/IRepositoryService/GetAllPlatformsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PlatformObject[]> GetAllPlatformsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllPostTypes", ReplyAction="http://tempuri.org/IRepositoryService/GetAllPostTypesResponse")]
        SocialSentimentService.RepoServiceReference.PostTypeObject[] GetAllPostTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllPostTypes", ReplyAction="http://tempuri.org/IRepositoryService/GetAllPostTypesResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject[]> GetAllPostTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllSentimentTypes", ReplyAction="http://tempuri.org/IRepositoryService/GetAllSentimentTypesResponse")]
        SocialSentimentService.RepoServiceReference.SentimentTypeObject[] GetAllSentimentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllSentimentTypes", ReplyAction="http://tempuri.org/IRepositoryService/GetAllSentimentTypesResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentTypeObject[]> GetAllSentimentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllAccounts", ReplyAction="http://tempuri.org/IRepositoryService/GetAllAccountsResponse")]
        SocialSentimentService.RepoServiceReference.AccountObject[] GetAllAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllAccounts", ReplyAction="http://tempuri.org/IRepositoryService/GetAllAccountsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject[]> GetAllAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllAccountTypes", ReplyAction="http://tempuri.org/IRepositoryService/GetAllAccountTypesResponse")]
        SocialSentimentService.RepoServiceReference.AccountTypeObject[] GetAllAccountTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAllAccountTypes", ReplyAction="http://tempuri.org/IRepositoryService/GetAllAccountTypesResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountTypeObject[]> GetAllAccountTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountsByPage", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountsByPageResponse")]
        SocialSentimentService.RepoServiceReference.AccountObject[] GetAccountsByPage(SocialSentimentService.RepoServiceReference.Pager request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountsByPage", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountsByPageResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject[]> GetAccountsByPageAsync(SocialSentimentService.RepoServiceReference.Pager request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPostsByPage", ReplyAction="http://tempuri.org/IRepositoryService/GetPostsByPageResponse")]
        SocialSentimentService.RepoServiceReference.PostObject[] GetPostsByPage(SocialSentimentService.RepoServiceReference.Pager request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPostsByPage", ReplyAction="http://tempuri.org/IRepositoryService/GetPostsByPageResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetPostsByPageAsync(SocialSentimentService.RepoServiceReference.Pager request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUsersByPage", ReplyAction="http://tempuri.org/IRepositoryService/GetUsersByPageResponse")]
        SocialSentimentService.RepoServiceReference.UserObject[] GetUsersByPage(SocialSentimentService.RepoServiceReference.Pager request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUsersByPage", ReplyAction="http://tempuri.org/IRepositoryService/GetUsersByPageResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.UserObject[]> GetUsersByPageAsync(SocialSentimentService.RepoServiceReference.Pager request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUserById", ReplyAction="http://tempuri.org/IRepositoryService/GetUserByIdResponse")]
        SocialSentimentService.RepoServiceReference.UserObject GetUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUserById", ReplyAction="http://tempuri.org/IRepositoryService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.UserObject> GetUserByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPostById", ReplyAction="http://tempuri.org/IRepositoryService/GetPostByIdResponse")]
        SocialSentimentService.RepoServiceReference.PostObject GetPostById(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPostById", ReplyAction="http://tempuri.org/IRepositoryService/GetPostByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject> GetPostByIdAsync(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetSentimentById", ReplyAction="http://tempuri.org/IRepositoryService/GetSentimentByIdResponse")]
        SocialSentimentService.RepoServiceReference.SentimentObject GetSentimentById(int sentimentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetSentimentById", ReplyAction="http://tempuri.org/IRepositoryService/GetSentimentByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentObject> GetSentimentByIdAsync(int sentimentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountById", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountByIdResponse")]
        SocialSentimentService.RepoServiceReference.AccountObject GetAccountById(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountById", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject> GetAccountByIdAsync(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetSentimentTypeById", ReplyAction="http://tempuri.org/IRepositoryService/GetSentimentTypeByIdResponse")]
        SocialSentimentService.RepoServiceReference.SentimentTypeObject GetSentimentTypeById(int sentimentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetSentimentTypeById", ReplyAction="http://tempuri.org/IRepositoryService/GetSentimentTypeByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentTypeObject> GetSentimentTypeByIdAsync(int sentimentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPostTypeById", ReplyAction="http://tempuri.org/IRepositoryService/GetPostTypeByIdResponse")]
        SocialSentimentService.RepoServiceReference.PostTypeObject GetPostTypeById(int postTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPostTypeById", ReplyAction="http://tempuri.org/IRepositoryService/GetPostTypeByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject> GetPostTypeByIdAsync(int postTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPlatformById", ReplyAction="http://tempuri.org/IRepositoryService/GetPlatformByIdResponse")]
        SocialSentimentService.RepoServiceReference.PlatformObject GetPlatformById(int platformId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetPlatformById", ReplyAction="http://tempuri.org/IRepositoryService/GetPlatformByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PlatformObject> GetPlatformByIdAsync(int platformId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountTypeById", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountTypeByIdResponse")]
        SocialSentimentService.RepoServiceReference.AccountTypeObject GetAccountTypeById(int accountTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountTypeById", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountTypeByIdResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountTypeObject> GetAccountTypeByIdAsync(int accountTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/RegisterUser", ReplyAction="http://tempuri.org/IRepositoryService/RegisterUserResponse")]
        void RegisterUser(SocialSentimentService.RepoServiceReference.UserObject user, long hashedPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/RegisterUser", ReplyAction="http://tempuri.org/IRepositoryService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(SocialSentimentService.RepoServiceReference.UserObject user, long hashedPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUserPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetUserPostsResponse")]
        SocialSentimentService.RepoServiceReference.PostObject[] GetUserPosts(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUserPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetUserPostsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetUserPostsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/AddPost", ReplyAction="http://tempuri.org/IRepositoryService/AddPostResponse")]
        void AddPost(SocialSentimentService.RepoServiceReference.PostObject post, string accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/AddPost", ReplyAction="http://tempuri.org/IRepositoryService/AddPostResponse")]
        System.Threading.Tasks.Task AddPostAsync(SocialSentimentService.RepoServiceReference.PostObject post, string accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUserPost", ReplyAction="http://tempuri.org/IRepositoryService/GetUserPostResponse")]
        SocialSentimentService.RepoServiceReference.PostObject GetUserPost(int userId, string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetUserPost", ReplyAction="http://tempuri.org/IRepositoryService/GetUserPostResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject> GetUserPostAsync(int userId, string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountPostsResponse")]
        SocialSentimentService.RepoServiceReference.PostObject[] GetAccountPosts(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetAccountPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetAccountPostsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetAccountPostsAsync(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetCommentsByPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetCommentsByPostsResponse")]
        SocialSentimentService.RepoServiceReference.FbCommentObject[] GetCommentsByPosts(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetCommentsByPosts", ReplyAction="http://tempuri.org/IRepositoryService/GetCommentsByPostsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject[]> GetCommentsByPostsAsync(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetFacebookCommentPostType", ReplyAction="http://tempuri.org/IRepositoryService/GetFacebookCommentPostTypeResponse")]
        SocialSentimentService.RepoServiceReference.PostTypeObject GetFacebookCommentPostType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetFacebookCommentPostType", ReplyAction="http://tempuri.org/IRepositoryService/GetFacebookCommentPostTypeResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject> GetFacebookCommentPostTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetFacebookWallPostType", ReplyAction="http://tempuri.org/IRepositoryService/GetFacebookWallPostTypeResponse")]
        SocialSentimentService.RepoServiceReference.PostTypeObject GetFacebookWallPostType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetFacebookWallPostType", ReplyAction="http://tempuri.org/IRepositoryService/GetFacebookWallPostTypeResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject> GetFacebookWallPostTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/AddFacebookPageAccount", ReplyAction="http://tempuri.org/IRepositoryService/AddFacebookPageAccountResponse")]
        SocialSentimentService.RepoServiceReference.AccountObject AddFacebookPageAccount(int userId, SocialSentimentService.RepoServiceReference.AccountObject account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/AddFacebookPageAccount", ReplyAction="http://tempuri.org/IRepositoryService/AddFacebookPageAccountResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject> AddFacebookPageAccountAsync(int userId, SocialSentimentService.RepoServiceReference.AccountObject account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/PostExists", ReplyAction="http://tempuri.org/IRepositoryService/PostExistsResponse")]
        bool PostExists(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/PostExists", ReplyAction="http://tempuri.org/IRepositoryService/PostExistsResponse")]
        System.Threading.Tasks.Task<bool> PostExistsAsync(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/AccountExists", ReplyAction="http://tempuri.org/IRepositoryService/AccountExistsResponse")]
        bool AccountExists(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/AccountExists", ReplyAction="http://tempuri.org/IRepositoryService/AccountExistsResponse")]
        System.Threading.Tasks.Task<bool> AccountExistsAsync(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/UploadComments", ReplyAction="http://tempuri.org/IRepositoryService/UploadCommentsResponse")]
        void UploadComments(SocialSentimentService.RepoServiceReference.FbCommentObject[] comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/UploadComments", ReplyAction="http://tempuri.org/IRepositoryService/UploadCommentsResponse")]
        System.Threading.Tasks.Task UploadCommentsAsync(SocialSentimentService.RepoServiceReference.FbCommentObject[] comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/UploadComment", ReplyAction="http://tempuri.org/IRepositoryService/UploadCommentResponse")]
        void UploadComment(SocialSentimentService.RepoServiceReference.FbCommentObject comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/UploadComment", ReplyAction="http://tempuri.org/IRepositoryService/UploadCommentResponse")]
        System.Threading.Tasks.Task UploadCommentAsync(SocialSentimentService.RepoServiceReference.FbCommentObject comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetWorstComment", ReplyAction="http://tempuri.org/IRepositoryService/GetWorstCommentResponse")]
        SocialSentimentService.RepoServiceReference.FbCommentObject GetWorstComment(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetWorstComment", ReplyAction="http://tempuri.org/IRepositoryService/GetWorstCommentResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject> GetWorstCommentAsync(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetBestComment", ReplyAction="http://tempuri.org/IRepositoryService/GetBestCommentResponse")]
        SocialSentimentService.RepoServiceReference.FbCommentObject GetBestComment(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetBestComment", ReplyAction="http://tempuri.org/IRepositoryService/GetBestCommentResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject> GetBestCommentAsync(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetNeutralComments", ReplyAction="http://tempuri.org/IRepositoryService/GetNeutralCommentsResponse")]
        SocialSentimentService.RepoServiceReference.FbCommentObject[] GetNeutralComments(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositoryService/GetNeutralComments", ReplyAction="http://tempuri.org/IRepositoryService/GetNeutralCommentsResponse")]
        System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject[]> GetNeutralCommentsAsync(string postId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRepositoryServiceChannel : SocialSentimentService.RepoServiceReference.IRepositoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RepositoryServiceClient : System.ServiceModel.ClientBase<SocialSentimentService.RepoServiceReference.IRepositoryService>, SocialSentimentService.RepoServiceReference.IRepositoryService {
        
        public RepositoryServiceClient() {
        }
        
        public RepositoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RepositoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RepositoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RepositoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SocialSentimentService.RepoServiceReference.UserObject[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.UserObject[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.PostObject[] GetAllPosts() {
            return base.Channel.GetAllPosts();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetAllPostsAsync() {
            return base.Channel.GetAllPostsAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.SentimentObject[] GetAllSentiments() {
            return base.Channel.GetAllSentiments();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentObject[]> GetAllSentimentsAsync() {
            return base.Channel.GetAllSentimentsAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.PlatformObject[] GetAllPlatforms() {
            return base.Channel.GetAllPlatforms();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PlatformObject[]> GetAllPlatformsAsync() {
            return base.Channel.GetAllPlatformsAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.PostTypeObject[] GetAllPostTypes() {
            return base.Channel.GetAllPostTypes();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject[]> GetAllPostTypesAsync() {
            return base.Channel.GetAllPostTypesAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.SentimentTypeObject[] GetAllSentimentTypes() {
            return base.Channel.GetAllSentimentTypes();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentTypeObject[]> GetAllSentimentTypesAsync() {
            return base.Channel.GetAllSentimentTypesAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.AccountObject[] GetAllAccounts() {
            return base.Channel.GetAllAccounts();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject[]> GetAllAccountsAsync() {
            return base.Channel.GetAllAccountsAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.AccountTypeObject[] GetAllAccountTypes() {
            return base.Channel.GetAllAccountTypes();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountTypeObject[]> GetAllAccountTypesAsync() {
            return base.Channel.GetAllAccountTypesAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.AccountObject[] GetAccountsByPage(SocialSentimentService.RepoServiceReference.Pager request) {
            return base.Channel.GetAccountsByPage(request);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject[]> GetAccountsByPageAsync(SocialSentimentService.RepoServiceReference.Pager request) {
            return base.Channel.GetAccountsByPageAsync(request);
        }
        
        public SocialSentimentService.RepoServiceReference.PostObject[] GetPostsByPage(SocialSentimentService.RepoServiceReference.Pager request) {
            return base.Channel.GetPostsByPage(request);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetPostsByPageAsync(SocialSentimentService.RepoServiceReference.Pager request) {
            return base.Channel.GetPostsByPageAsync(request);
        }
        
        public SocialSentimentService.RepoServiceReference.UserObject[] GetUsersByPage(SocialSentimentService.RepoServiceReference.Pager request) {
            return base.Channel.GetUsersByPage(request);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.UserObject[]> GetUsersByPageAsync(SocialSentimentService.RepoServiceReference.Pager request) {
            return base.Channel.GetUsersByPageAsync(request);
        }
        
        public SocialSentimentService.RepoServiceReference.UserObject GetUserById(int userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.UserObject> GetUserByIdAsync(int userId) {
            return base.Channel.GetUserByIdAsync(userId);
        }
        
        public SocialSentimentService.RepoServiceReference.PostObject GetPostById(string postId) {
            return base.Channel.GetPostById(postId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject> GetPostByIdAsync(string postId) {
            return base.Channel.GetPostByIdAsync(postId);
        }
        
        public SocialSentimentService.RepoServiceReference.SentimentObject GetSentimentById(int sentimentId) {
            return base.Channel.GetSentimentById(sentimentId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentObject> GetSentimentByIdAsync(int sentimentId) {
            return base.Channel.GetSentimentByIdAsync(sentimentId);
        }
        
        public SocialSentimentService.RepoServiceReference.AccountObject GetAccountById(string accountId) {
            return base.Channel.GetAccountById(accountId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject> GetAccountByIdAsync(string accountId) {
            return base.Channel.GetAccountByIdAsync(accountId);
        }
        
        public SocialSentimentService.RepoServiceReference.SentimentTypeObject GetSentimentTypeById(int sentimentTypeId) {
            return base.Channel.GetSentimentTypeById(sentimentTypeId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.SentimentTypeObject> GetSentimentTypeByIdAsync(int sentimentTypeId) {
            return base.Channel.GetSentimentTypeByIdAsync(sentimentTypeId);
        }
        
        public SocialSentimentService.RepoServiceReference.PostTypeObject GetPostTypeById(int postTypeId) {
            return base.Channel.GetPostTypeById(postTypeId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject> GetPostTypeByIdAsync(int postTypeId) {
            return base.Channel.GetPostTypeByIdAsync(postTypeId);
        }
        
        public SocialSentimentService.RepoServiceReference.PlatformObject GetPlatformById(int platformId) {
            return base.Channel.GetPlatformById(platformId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PlatformObject> GetPlatformByIdAsync(int platformId) {
            return base.Channel.GetPlatformByIdAsync(platformId);
        }
        
        public SocialSentimentService.RepoServiceReference.AccountTypeObject GetAccountTypeById(int accountTypeId) {
            return base.Channel.GetAccountTypeById(accountTypeId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountTypeObject> GetAccountTypeByIdAsync(int accountTypeId) {
            return base.Channel.GetAccountTypeByIdAsync(accountTypeId);
        }
        
        public void RegisterUser(SocialSentimentService.RepoServiceReference.UserObject user, long hashedPassword) {
            base.Channel.RegisterUser(user, hashedPassword);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(SocialSentimentService.RepoServiceReference.UserObject user, long hashedPassword) {
            return base.Channel.RegisterUserAsync(user, hashedPassword);
        }
        
        public SocialSentimentService.RepoServiceReference.PostObject[] GetUserPosts(int userId) {
            return base.Channel.GetUserPosts(userId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetUserPostsAsync(int userId) {
            return base.Channel.GetUserPostsAsync(userId);
        }
        
        public void AddPost(SocialSentimentService.RepoServiceReference.PostObject post, string accountid) {
            base.Channel.AddPost(post, accountid);
        }
        
        public System.Threading.Tasks.Task AddPostAsync(SocialSentimentService.RepoServiceReference.PostObject post, string accountid) {
            return base.Channel.AddPostAsync(post, accountid);
        }
        
        public SocialSentimentService.RepoServiceReference.PostObject GetUserPost(int userId, string postId) {
            return base.Channel.GetUserPost(userId, postId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject> GetUserPostAsync(int userId, string postId) {
            return base.Channel.GetUserPostAsync(userId, postId);
        }
        
        public SocialSentimentService.RepoServiceReference.PostObject[] GetAccountPosts(string accountId) {
            return base.Channel.GetAccountPosts(accountId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostObject[]> GetAccountPostsAsync(string accountId) {
            return base.Channel.GetAccountPostsAsync(accountId);
        }
        
        public SocialSentimentService.RepoServiceReference.FbCommentObject[] GetCommentsByPosts(string postId) {
            return base.Channel.GetCommentsByPosts(postId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject[]> GetCommentsByPostsAsync(string postId) {
            return base.Channel.GetCommentsByPostsAsync(postId);
        }
        
        public SocialSentimentService.RepoServiceReference.PostTypeObject GetFacebookCommentPostType() {
            return base.Channel.GetFacebookCommentPostType();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject> GetFacebookCommentPostTypeAsync() {
            return base.Channel.GetFacebookCommentPostTypeAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.PostTypeObject GetFacebookWallPostType() {
            return base.Channel.GetFacebookWallPostType();
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.PostTypeObject> GetFacebookWallPostTypeAsync() {
            return base.Channel.GetFacebookWallPostTypeAsync();
        }
        
        public SocialSentimentService.RepoServiceReference.AccountObject AddFacebookPageAccount(int userId, SocialSentimentService.RepoServiceReference.AccountObject account) {
            return base.Channel.AddFacebookPageAccount(userId, account);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.AccountObject> AddFacebookPageAccountAsync(int userId, SocialSentimentService.RepoServiceReference.AccountObject account) {
            return base.Channel.AddFacebookPageAccountAsync(userId, account);
        }
        
        public bool PostExists(string postId) {
            return base.Channel.PostExists(postId);
        }
        
        public System.Threading.Tasks.Task<bool> PostExistsAsync(string postId) {
            return base.Channel.PostExistsAsync(postId);
        }
        
        public bool AccountExists(string accountId) {
            return base.Channel.AccountExists(accountId);
        }
        
        public System.Threading.Tasks.Task<bool> AccountExistsAsync(string accountId) {
            return base.Channel.AccountExistsAsync(accountId);
        }
        
        public void UploadComments(SocialSentimentService.RepoServiceReference.FbCommentObject[] comments) {
            base.Channel.UploadComments(comments);
        }
        
        public System.Threading.Tasks.Task UploadCommentsAsync(SocialSentimentService.RepoServiceReference.FbCommentObject[] comments) {
            return base.Channel.UploadCommentsAsync(comments);
        }
        
        public void UploadComment(SocialSentimentService.RepoServiceReference.FbCommentObject comment) {
            base.Channel.UploadComment(comment);
        }
        
        public System.Threading.Tasks.Task UploadCommentAsync(SocialSentimentService.RepoServiceReference.FbCommentObject comment) {
            return base.Channel.UploadCommentAsync(comment);
        }
        
        public SocialSentimentService.RepoServiceReference.FbCommentObject GetWorstComment(string postId) {
            return base.Channel.GetWorstComment(postId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject> GetWorstCommentAsync(string postId) {
            return base.Channel.GetWorstCommentAsync(postId);
        }
        
        public SocialSentimentService.RepoServiceReference.FbCommentObject GetBestComment(string postId) {
            return base.Channel.GetBestComment(postId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject> GetBestCommentAsync(string postId) {
            return base.Channel.GetBestCommentAsync(postId);
        }
        
        public SocialSentimentService.RepoServiceReference.FbCommentObject[] GetNeutralComments(string postId) {
            return base.Channel.GetNeutralComments(postId);
        }
        
        public System.Threading.Tasks.Task<SocialSentimentService.RepoServiceReference.FbCommentObject[]> GetNeutralCommentsAsync(string postId) {
            return base.Channel.GetNeutralCommentsAsync(postId);
        }
    }
}
